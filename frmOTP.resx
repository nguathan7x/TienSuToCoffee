<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH6AoIEDUEAL2m3gAAA9lJREFU
        WEe9V8tOFEEUnWZUVnyCceE3kGBcGZihGwZCiCZslB/Qlf/ga2VM8BE/wBC/gF9ghUH3EBcaF8SQKAse
        7T331J26Vd0yAzFWcqaq7+vcrqq+U9X5W6vLkpifL+rFxUL7spwQXKmrCujKGLJCx5BBB5vUR+OM3cxB
        UNSDQVGvrGAMgm7d73fqXq+oV1eDdWyQqQ42TK5bLy93NBEmOjoRM3IOeOOuBqkqzMZ1eV4XvBZsCbYD
        MIZsXW1gS2Ikghg+ZmDLmimd4YS+CYKV5bTgo+CXoBYZgXHzGTawnVZfzsb5SZjQGXTlTdBPCd4IzoYk
        VXUizyfaV9VpgJdZMmfBdyrEQiKeI7BLyxRmeFOwKyApSdI3zhH13h4xEMvHVq42cpsqOOyFwMcyTonG
        AX2Ow3gvxPQcTMI9WBKY9p0Q6HLkhjSJnRA74eMDvte44bCb6dgkx17A1Po9kerYR7mPhdi2MVkjCsvG
        1uaWAAGwgWKQGMzk6D2R90kTALwPOcAFTkkgfftNAYzjbmYABi3LfcFjwXcnN923oPua+ETYptyU8XAW
        QGqb4obgUI2ZRE7+UzAjgO2s4Lezwbd/J+huCyxOTMJiQkcu5cYP6jd6VDgY5W+P7xz953p2Fv8B14L9
        ggBvhfWtVAZdr3dVxl8S3wibBXApt09gQ0Aj70TZqfZl+UFKLGwtiQeC+zoG+doaZLaMOTlgCYBLubkW
        XP8tNWJFSx3TJGwnI3H7nGwTvxVE22YcxiaXcnfqhYVCAOftYNiWuSVhn9NLAXww3QDGrwTRpi1GfAlw
        IQHZhPKjD+MlYFP4VMAEqgrA+LnqLpFAugT5HgAY0JyfyRj2fglsH70QRNs8jsVOloCnGzhvqLItgUj+
        LizXpAD9I8HDMJ4MuvcC+jTjWALgUm44jPsZfqpnZrBcRn5P7Ym7KoNubg51ZTfx5ZixaZ98hqMKkfVH
        gr4AtssC/MmwErIWLAVdKTga+jfjHEoFdIUoL8V0yJeBdR4luCyfCA5UjkoXK+VB0P1wfh42/Y1SPP6f
        UZRHYiD1ifKop5wJZ39GcSeP/jsmUdsmNRLo0gQsFsetf8c+CYz//YEE/TkHEhOg//9HsuRcyCWw/QCH
        5qE0J8qR2+eHUnJEcrQgHCoEzWN5JLfg6PGdo0hRRjAJ+rQfy/EsnEkLShqwx1SZU3oxiclEmNxfTOiL
        GMm0A63NlM6QSeCOyDI7+moGG9jC5yLk1sxIHXC/4wEEgXg57fcLXDrzphdR6GBj9oPBxS6nvpmDOi8t
        pddzAN8yzxKspCaHDWzhM5K40/kDjezb/89KH4cAAAAASUVORK5CYII=
</value>
  </data>
</root>